spring:
  application:
    name: "configserver"
  profiles:
    #active: native
    active: git #using git profile for git method
  cloud:
    config:
      server:
        #native:
          #search-locations: "classpath:/config" #Storing inside classpath, under the config folder of the resources directory
          #search-locations: "file:///C://Users//User//Downloads//config" #file system storage for the config files; the only change that needs to be done
        git:
          uri: "https://github.com/zhaqsylyq/microservices-project-config.git"
          default-label: main
          timeout: 5 #throws exception if the server has waited more than 5 secs to connect to the repo
          clone-on-start: true #clone the git repo during the startup, if not set to true, cloning will happen only after the first request
          force-pull: true #telling to override all the local changes whenever trying to start or restart the config server

management:
  endpoints:
    web:
      exposure:
        include: "*" #enable all the management related endpoints supported by the actuator, to enable refreshes of properties during runtime
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
       probes:
         enabled: true
  metrics: # Telling to group the metrics related to accounts ms under the application name(accounts)
    tags:
      application: ${spring.application.name}

encrypt:
  key: "45D81EC1EF61DF9AD8D3E5BB397F9" # key for encrypting the sensitive data in the config file

server:
  port: 8071

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"